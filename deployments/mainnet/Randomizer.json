{
  "address": "0x6B63988D775Fa2B917445d760C9E44523A76d041",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dependency",
          "type": "address"
        }
      ],
      "name": "addDependency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "dependencies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRandomValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dependency",
          "type": "address"
        }
      ],
      "name": "removeDependency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3424a71e9e08948b7f3ffb1f253333736fe4d52c28230fa19ca45e371dc582cf",
  "receipt": {
    "to": null,
    "from": "0xf8cA77ED09429aDe0d5C01ADB1D284C45324F608",
    "contractAddress": "0x6B63988D775Fa2B917445d760C9E44523A76d041",
    "transactionIndex": 104,
    "gasUsed": "620037",
    "logsBloom": "0x
    "blockHash": "0xeb1ff5f99c9b63848d0067f0c5220217d6622d178c8b15f83ddaeebd811bec7f",
    "transactionHash": "0x3424a71e9e08948b7f3ffb1f253333736fe4d52c28230fa19ca45e371dc582cf",
    "logs": [
      {
        "transactionIndex": 104,
        "blockNumber": 14628365,
        "transactionHash": "0x3424a71e9e08948b7f3ffb1f253333736fe4d52c28230fa19ca45e371dc582cf",
        "address": "0x6B63988D775Fa2B917445d760C9E44523A76d041",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f8ca77ed09429ade0d5c01adb1d284c45324f608"
        ],
        "data": "0x",
        "logIndex": 197,
        "blockHash": "0xeb1ff5f99c9b63848d0067f0c5220217d6622d178c8b15f83ddaeebd811bec7f"
      }
    ],
    "blockNumber": 14628365,
    "cumulativeGasUsed": "10526952",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ffa24242ec272b6bed6d4597fff498c6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dependency\",\"type\":\"address\"}],\"name\":\"addDependency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dependencies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRandomValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dependency\",\"type\":\"address\"}],\"name\":\"removeDependency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Randomizer.sol\":\"Randomizer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/utils/Randomizer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IRandomizer.sol\\\";\\n\\ncontract Randomizer is IRandomizer, Ownable {\\n    mapping(address => bool) public dependencies;\\n\\n    function addDependency(address _dependency) public onlyOwner {\\n        dependencies[_dependency] = true;\\n    }\\n\\n    function removeDependency(address _dependency) public onlyOwner {\\n        dependencies[_dependency] = false;\\n    }\\n\\n    function getRandomValue() external view onlyDependency returns (uint256) {\\n        return uint256(blockhash(block.number - 1)) + 369963;\\n    }\\n\\n    modifier onlyDependency() {\\n        require(dependencies[msg.sender], \\\"Caller is not in dependency list\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x1e51c9f6a0cf7b24a1a58a62cc0ecb2d37b96bec15a26f9a845c5d2a11031826\",\"license\":\"MIT\"},\"contracts/utils/interfaces/IRandomizer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\ninterface IRandomizer {\\n    function getRandomValue() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf291325336a4f369a5ac57c61a5051bd676e928ee4b1ea167c17ec6e672d59ad\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6109ce8061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d85780638da5cb5b146100e2578063d085010614610100578063f2fde38b146101305761007d565b80630c5ddd2d146100825780631486a2761461009e5780633e6376db146100bc575b600080fd5b61009c600480360381019061009791906106a3565b61014c565b005b6100a6610223565b6040516100b391906106e9565b60405180910390f35b6100d660048036038101906100d191906106a3565b6102d5565b005b6100e06103ab565b005b6100ea610433565b6040516100f79190610713565b60405180910390f35b61011a600480360381019061011591906106a3565b61045c565b6040516101279190610749565b60405180910390f35b61014a600480360381019061014591906106a3565b61047c565b005b610154610574565b73ffffffffffffffffffffffffffffffffffffffff16610172610433565b73ffffffffffffffffffffffffffffffffffffffff16146101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf906107c1565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a89061082d565b60405180910390fd5b6205a52b6001436102c2919061087c565b4060001c6102d091906108b0565b905090565b6102dd610574565b73ffffffffffffffffffffffffffffffffffffffff166102fb610433565b73ffffffffffffffffffffffffffffffffffffffff1614610351576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610348906107c1565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103b3610574565b73ffffffffffffffffffffffffffffffffffffffff166103d1610433565b73ffffffffffffffffffffffffffffffffffffffff1614610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e906107c1565b60405180910390fd5b610431600061057c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b610484610574565b73ffffffffffffffffffffffffffffffffffffffff166104a2610433565b73ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef906107c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90610978565b60405180910390fd5b6105718161057c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067082610645565b9050919050565b61068081610665565b811461068b57600080fd5b50565b60008135905061069d81610677565b92915050565b6000602082840312156106b9576106b8610640565b5b60006106c78482850161068e565b91505092915050565b6000819050919050565b6106e3816106d0565b82525050565b60006020820190506106fe60008301846106da565b92915050565b61070d81610665565b82525050565b60006020820190506107286000830184610704565b92915050565b60008115159050919050565b6107438161072e565b82525050565b600060208201905061075e600083018461073a565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107ab602083610764565b91506107b682610775565b602082019050919050565b600060208201905081810360008301526107da8161079e565b9050919050565b7f43616c6c6572206973206e6f7420696e20646570656e64656e6379206c697374600082015250565b6000610817602083610764565b9150610822826107e1565b602082019050919050565b600060208201905081810360008301526108468161080a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610887826106d0565b9150610892836106d0565b9250828210156108a5576108a461084d565b5b828203905092915050565b60006108bb826106d0565b91506108c6836106d0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108fb576108fa61084d565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610962602683610764565b915061096d82610906565b604082019050919050565b6000602082019050818103600083015261099181610955565b905091905056fea26469706673582212209cf010f5f0f71c8c35d6f661f81ad5d3cfdd8cc8830b2a8ab6802a773fd6f43e64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100d85780638da5cb5b146100e2578063d085010614610100578063f2fde38b146101305761007d565b80630c5ddd2d146100825780631486a2761461009e5780633e6376db146100bc575b600080fd5b61009c600480360381019061009791906106a3565b61014c565b005b6100a6610223565b6040516100b391906106e9565b60405180910390f35b6100d660048036038101906100d191906106a3565b6102d5565b005b6100e06103ab565b005b6100ea610433565b6040516100f79190610713565b60405180910390f35b61011a600480360381019061011591906106a3565b61045c565b6040516101279190610749565b60405180910390f35b61014a600480360381019061014591906106a3565b61047c565b005b610154610574565b73ffffffffffffffffffffffffffffffffffffffff16610172610433565b73ffffffffffffffffffffffffffffffffffffffff16146101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf906107c1565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a89061082d565b60405180910390fd5b6205a52b6001436102c2919061087c565b4060001c6102d091906108b0565b905090565b6102dd610574565b73ffffffffffffffffffffffffffffffffffffffff166102fb610433565b73ffffffffffffffffffffffffffffffffffffffff1614610351576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610348906107c1565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6103b3610574565b73ffffffffffffffffffffffffffffffffffffffff166103d1610433565b73ffffffffffffffffffffffffffffffffffffffff1614610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e906107c1565b60405180910390fd5b610431600061057c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900460ff1681565b610484610574565b73ffffffffffffffffffffffffffffffffffffffff166104a2610433565b73ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef906107c1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055f90610978565b60405180910390fd5b6105718161057c565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061067082610645565b9050919050565b61068081610665565b811461068b57600080fd5b50565b60008135905061069d81610677565b92915050565b6000602082840312156106b9576106b8610640565b5b60006106c78482850161068e565b91505092915050565b6000819050919050565b6106e3816106d0565b82525050565b60006020820190506106fe60008301846106da565b92915050565b61070d81610665565b82525050565b60006020820190506107286000830184610704565b92915050565b60008115159050919050565b6107438161072e565b82525050565b600060208201905061075e600083018461073a565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107ab602083610764565b91506107b682610775565b602082019050919050565b600060208201905081810360008301526107da8161079e565b9050919050565b7f43616c6c6572206973206e6f7420696e20646570656e64656e6379206c697374600082015250565b6000610817602083610764565b9150610822826107e1565b602082019050919050565b600060208201905081810360008301526108468161080a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610887826106d0565b9150610892836106d0565b9250828210156108a5576108a461084d565b5b828203905092915050565b60006108bb826106d0565b91506108c6836106d0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108fb576108fa61084d565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610962602683610764565b915061096d82610906565b604082019050919050565b6000602082019050818103600083015261099181610955565b905091905056fea26469706673582212209cf010f5f0f71c8c35d6f661f81ad5d3cfdd8cc8830b2a8ab6802a773fd6f43e64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/utils/Randomizer.sol:Randomizer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3622,
        "contract": "contracts/utils/Randomizer.sol:Randomizer",
        "label": "dependencies",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}